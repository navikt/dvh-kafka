spring:
  profiles:
    active: prod

    jpa:
      database: oracle
      database-platform: org.hibernate.dialect.Oracle10gDialect
      hibernate.ddl-auto: none
      show-sql: false
      properties:
        hibernate:
          cache:
            use_second_level_cache: false
            use_query_cache: false
          dialect: org.hibernate.dialect.Oracle10gDialect

    datasource:
      url: ${JDBC_URL}
      driverClassName: oracle.jdbc.OracleDriver

    hikari:
      maximum-pool-size: 3
      connection-timeout: 60000
      poolName: hikariPool

    kafka:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      consumer:
        #TODO: Set group-id til et unikt navn for konsumenten som kafka bruker for Ã¥ vite hvor langt en konsument har lest.
        group-id: dvh-kafka-konsument
        auto-offset-reset: earliest
      properties:
        security.protocol: SASL_SSL
        sasl:
          mechanism: PLAIN

# TODO: Fyll ut topicnavn
kafka:
  topics: topic1

logging:
  config:
    classpath: logback-spring.xml

vault:
  path: /var/run/secrets/nais.io/vault

truststore:
  path: ${NAV_TRUSTSTORE_PATH}
  password: ${NAV_TRUSTSTORE_PASSWORD}

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /
    exposure.include: prometheus
    path-mapping.prometheus: /metrics
